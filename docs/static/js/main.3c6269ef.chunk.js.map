{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","el","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","fetch","resp","json","data","gifs","map","img","images","downsized_medium","GifGrid","loading","state","setstate","useEffect","then","useFetchGifs","key","GifExpertApp","categories","cat","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6MAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,IAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAe9C,OACI,0BAAMC,SARW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAQ,MAAM,CAAEP,GAAR,mBAAuBO,OAC7CN,EAAc,OAKd,2BAAOO,KAAK,OAAOC,MAAOT,EACtBU,SAdc,SAACP,GACvB,IAAMM,EAAQN,EAAEQ,OAAOF,MACvBR,EAAcQ,QCPTG,EAAc,SAAC,GAAuB,EAArBC,GAAsB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAErC,OACI,yBAAKC,UAAU,0CAEX,yBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,2BAAIA,K,uBCLHK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbN,EADa,0FAC4EK,EAD5E,sBAEAE,MAAMP,GAFN,cAEbQ,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAEFC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAO,CACHf,GAAIe,EAAIf,GACRC,MAAOc,EAAId,MACXC,IAAG,UAAEa,EAAIC,cAAN,aAAE,EAAYC,iBAAiBf,QATvB,kBAaZW,GAbY,4CAAH,sDCEPK,EAAU,SAAC,GAAkB,IAAhBX,EAAe,EAAfA,SAAe,ECDb,SAACA,GAAc,IAAD,EACZrB,mBAAS,CAAE0B,KAAM,GAAIO,SAAS,IADlB,mBAC/BC,EAD+B,KACxBC,EADwB,KAWtC,OARAC,qBAAU,WACNhB,EAAQC,GAAUgB,MAAK,SAAAR,GACnBM,EAAS,CAAET,KAAMG,EAAKI,SAAS,SAIpC,CAACZ,IAEGa,EDFmBI,CAAajB,GAA/BK,EAR6B,EAQ7BA,KAAMO,EARuB,EAQvBA,QAGd,OACI,oCACI,wBAAIhB,UAAU,qCAAqCI,GAClDY,GAAW,uBAAGhB,UAAU,oCAAb,kBACZ,yBAAKA,UAAU,aAEPS,EAAKE,KAAI,SAAApB,GAAE,OAAI,kBAAC,EAAD,eACX+B,IAAK/B,EAAGM,IAEJN,UEQbgC,EA3BM,WAAM,MAEaxC,mBAAS,CAAC,cAFvB,mBAEhByC,EAFgB,KAEJ1C,EAFI,KAMvB,OAAO,oCACH,4CACA,kBAAC,EAAD,CACIA,cAAeA,IAEnB,6BACA,4BAEQ0C,EAAWb,KAAI,SAAAc,GAEX,OAAO,kBAAC,EAAD,CACHH,IAAKG,EACLrB,SAAUqB,UClBlCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.3c6269ef.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) => {\r\n        const value = e.target.value;\r\n        setinputValue(value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 0) {\r\n            setCategories(el => { return [inputValue, ...el,] })\r\n            setinputValue(\"\");\r\n        }\r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input type=\"text\" value={inputValue}\r\n                onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    // console.log(img)\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            {/* {img.title} */}\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","\r\n\r\n\r\nexport const getGifs = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=WREWF6cYV6uQzoJsNiLNRD18fD783pvG&q=${category}&limit=10`\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\nimport { GifGridItem } from './GifGridItem';\r\n// import { getGifs } from '../helpers/getGifs';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    // const [images, setimages] = useState([])\r\n    // useEffect(() => {\r\n    //     getGifs(category).then(img => {\r\n    //         setimages(img);\r\n    //     });\r\n    // }, [category])\r\n    const { data, loading } = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Cargando ...  </p>}\r\n            <div className=\"card-grid\">\r\n                {\r\n                    data.map(el => <GifGridItem\r\n                        key={el.id}\r\n                        // img={el}\r\n                        {...el}\r\n                    ></GifGridItem>)\r\n                }\r\n\r\n            </div >\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setstate] = useState({ data: [], loading: true })\r\n\r\n    useEffect(() => {\r\n        getGifs(category).then(img => {\r\n            setstate({ data: img, loading: false });\r\n            // setTimeout(() => {            \r\n            // }, 3000);\r\n        });\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nconst GifExpertApp = () => {\r\n    // const categories = [\"One punch\", \"Samurai\", \"Dragon\"];\r\n    const [categories, setCategories] = useState([\"One punch\"])\r\n    // const handleAdd = () => {\r\n    //     setCategories([...categories,\"HunterXHunter\"]);\r\n    // }\r\n    return <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory\r\n            setCategories={setCategories}\r\n        ></AddCategory>\r\n        <hr />\r\n        <ol>\r\n            {\r\n                categories.map(cat => {\r\n                    // return <li key={el}>{el}</li>\r\n                    return <GifGrid\r\n                        key={cat}\r\n                        category={cat}></GifGrid>;\r\n                })\r\n            }\r\n        </ol>\r\n\r\n    </>;\r\n}\r\n\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}